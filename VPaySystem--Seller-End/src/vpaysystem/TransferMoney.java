/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vpaysystem;

import com.sun.glass.events.KeyEvent;
import java.awt.Color;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

/**
 *
 * @author SWHB
 */
public class TransferMoney extends javax.swing.JPanel {
     
    String IP;
    public TransferMoney(String senderID, JLabel lblBalance, String IP) {
        initComponents();
        this.senderID=senderID;
        this.lblBalance=lblBalance;
        //System.out.println(lblBalance.getText());
      youramount=Double.parseDouble(lblBalance.getText());
         this.IP=IP;       
        lblError.setVisible(false);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        txtCMS = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        lblSearch = new javax.swing.JLabel();
        txtAmount = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        lblSearch1 = new javax.swing.JLabel();
        btnWithdraw = new javax.swing.JButton();
        lblPassword = new javax.swing.JLabel();
        txtPassword = new javax.swing.JPasswordField();
        jSeparator3 = new javax.swing.JSeparator();
        lblError = new javax.swing.JLabel();

        setBackground(new java.awt.Color(52, 52, 60));
        setLayout(new java.awt.GridBagLayout());

        txtCMS.setBackground(new java.awt.Color(52, 52, 60));
        txtCMS.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        txtCMS.setForeground(new java.awt.Color(255, 255, 255));
        txtCMS.setBorder(null);
        txtCMS.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtCMSFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCMSFocusLost(evt);
            }
        });
        txtCMS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCMSActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.ipadx = 279;
        gridBagConstraints.ipady = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(8, 270, 0, 0);
        add(txtCMS, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.ipadx = 277;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 270, 0, 0);
        add(jSeparator1, gridBagConstraints);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 30)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Transfer Amount");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 8;
        gridBagConstraints.ipadx = 27;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(50, 270, 0, 0);
        add(jLabel1, gridBagConstraints);

        lblSearch.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblSearch.setForeground(new java.awt.Color(153, 153, 153));
        lblSearch.setText("Reciever ID");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(63, 270, 0, 0);
        add(lblSearch, gridBagConstraints);

        txtAmount.setBackground(new java.awt.Color(52, 52, 60));
        txtAmount.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        txtAmount.setForeground(new java.awt.Color(255, 255, 255));
        txtAmount.setBorder(null);
        txtAmount.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtAmountFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtAmountFocusLost(evt);
            }
        });
        txtAmount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtAmountKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtAmountKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtAmountKeyTyped(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.ipadx = 279;
        gridBagConstraints.ipady = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(8, 270, 0, 0);
        add(txtAmount, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.ipadx = 277;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 270, 0, 0);
        add(jSeparator2, gridBagConstraints);

        lblSearch1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblSearch1.setForeground(new java.awt.Color(153, 153, 153));
        lblSearch1.setText("Amount (Rs.)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 270, 0, 0);
        add(lblSearch1, gridBagConstraints);

        btnWithdraw.setBackground(new java.awt.Color(70, 80, 95));
        btnWithdraw.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnWithdraw.setForeground(new java.awt.Color(255, 255, 255));
        btnWithdraw.setText("Send");
        btnWithdraw.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnWithdraw.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                btnWithdrawFocusGained(evt);
            }
        });
        btnWithdraw.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnWithdrawMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnWithdrawMouseExited(evt);
            }
        });
        btnWithdraw.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnWithdrawActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.ipadx = 39;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(19, 40, 0, 0);
        add(btnWithdraw, gridBagConstraints);

        lblPassword.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblPassword.setForeground(new java.awt.Color(153, 153, 153));
        lblPassword.setText("Password");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 43;
        gridBagConstraints.ipady = -2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(29, 270, 0, 0);
        add(lblPassword, gridBagConstraints);

        txtPassword.setBackground(new java.awt.Color(52, 52, 60));
        txtPassword.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        txtPassword.setForeground(new java.awt.Color(255, 255, 255));
        txtPassword.setBorder(null);
        txtPassword.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtPasswordFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPasswordFocusLost(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 9;
        gridBagConstraints.ipadx = 290;
        gridBagConstraints.ipady = 11;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 270, 0, 217);
        add(txtPassword, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 9;
        gridBagConstraints.ipadx = 289;
        gridBagConstraints.ipady = 19;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 270, 0, 217);
        add(jSeparator3, gridBagConstraints);

        lblError.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblError.setForeground(new java.awt.Color(255, 51, 51));
        lblError.setText("Invalid Reciever ID");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.gridwidth = 8;
        gridBagConstraints.ipadx = 95;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(49, 280, 105, 0);
        add(lblError, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void txtCMSFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCMSFocusGained
        lblSearch.setForeground(Color.white);
    }//GEN-LAST:event_txtCMSFocusGained

    private void txtCMSFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCMSFocusLost
        lblSearch.setForeground(new Color(153,153,153));
        if(!txtCMS.getText().equals(senderID))
        {
        boolean isFound=false;  
        Connection con;
        Statement st;
        ResultSet rs;
        
            try
            {
                 Class.forName("oracle.jdbc.driver.OracleDriver");
            con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe","system","bukhari");
            
            String sql="Select CMS_ID from Credentials where UserKey=1";
             
            st=con.createStatement();
            rs=st.executeQuery(sql);
            while(rs.next())
            {
                if(txtCMS.getText().equals(rs.getString("CMS_ID")))
                {
                    isFound=true;
                    break;
                }
            }
            con.close();
             if(!isFound)
             {
                lblError.setText("Reciver ID not Found");
                 lblError.setVisible(true);   
             }
         
            con.close();
            }
            catch(Exception e)
            {
               // System.out.println(e.getMessage());
            }
      
        }
        else
        {
        lblError.setText("Reciver ID Should be Different");
        lblError.setVisible(true);
        }
        
    }//GEN-LAST:event_txtCMSFocusLost

    private void txtAmountFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtAmountFocusGained
      lblSearch1.setForeground(Color.white);
    }//GEN-LAST:event_txtAmountFocusGained

    private void txtAmountFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtAmountFocusLost
        lblSearch1.setForeground(new Color(153,153,153));
    }//GEN-LAST:event_txtAmountFocusLost

    private void btnWithdrawFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_btnWithdrawFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_btnWithdrawFocusGained

    private void btnWithdrawMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnWithdrawMouseEntered
        btnWithdraw.setBackground(new Color(225,150,100));
        btnWithdraw.setForeground(Color.black);

    }//GEN-LAST:event_btnWithdrawMouseEntered

    private void btnWithdrawMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnWithdrawMouseExited
        btnWithdraw.setBackground(new Color(70,80,95));
        btnWithdraw.setForeground(Color.white);
    }//GEN-LAST:event_btnWithdrawMouseExited

    private void txtCMSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCMSActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCMSActionPerformed

    private void txtPasswordFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPasswordFocusGained
        lblPassword.setForeground(Color.white);
    }//GEN-LAST:event_txtPasswordFocusGained

    private void txtPasswordFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPasswordFocusLost
        lblPassword.setForeground(new Color(153,153,153));
        
        boolean isFound=false;
        Connection con;
        Statement st;
        ResultSet rs;
        try
        {
          Class.forName("oracle.jdbc.driver.OracleDriver");
            con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe","system","bukhari");
            
            String sql="Select CMS_ID,Password from Credentials where UserKey=1";
             
             st=con.createStatement();
            rs=st.executeQuery(sql);
            while(rs.next())
            {
                if(senderID.equals(rs.getString("CMS_ID")) && txtPassword.getText().equals(rs.getString("Password")))
                {
                    isFound=true;
                    break;
                }
            }
            
            con.close();
            if(!isFound)
            {
                lblError.setText("Your Password is Incorrect");
                lblError.setVisible(true);
            }
        }
        catch(Exception e)
        {
            
        }
        
        
    }//GEN-LAST:event_txtPasswordFocusLost

    private void btnWithdrawActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnWithdrawActionPerformed
      sent=true;
       if(!(txtCMS.getText().equals("") || txtAmount.getText().equals("") || txtPassword.getText().equals("")))
        {
      String recieverID=txtCMS.getText();
      int transferedAmount=Integer.parseInt(txtAmount.getText());
       Connection con;
        Statement st;
        ResultSet rs;
        try
        {
          Class.forName("oracle.jdbc.driver.OracleDriver");
            con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe","system","bukhari");
            st=con.createStatement();
            String sql="Update Customer set Balance=(select Balance from Customer where CMS_ID='"+txtCMS.getText()+"')+"+Integer.parseInt(txtAmount.getText())+" where CMS_ID='"+txtCMS.getText()+"'";
             
            rs=st.executeQuery(sql);
             String sql1="Update Customer set Balance=(select Balance from Customer where CMS_ID='"+senderID+"')-"+Integer.parseInt(txtAmount.getText())+" where CMS_ID='"+senderID+"'";
            rs=st.executeQuery(sql1);
            String sql2="insert into FundsTransfered values('"+senderID+"','"+txtCMS.getText()+"',"+Integer.parseInt(txtAmount.getText())+",sysdate)";
            rs=st.executeQuery(sql2);
            con.close();
            JOptionPane.showMessageDialog(null, "Amount Has been Transfered");
      
             youramount=youramount-Integer.parseInt(txtAmount.getText());            
        }
        catch(Exception e)
        {
            System.out.println(e.getMessage());
        }
      
        }
      
    }//GEN-LAST:event_btnWithdrawActionPerformed

    private void txtAmountKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAmountKeyTyped
      char c=evt.getKeyChar();
      if(!(Character.isDigit(c) || c==KeyEvent.VK_BACKSPACE || c==KeyEvent.VK_DELETE))
      {
          evt.consume();
      }
     
    }//GEN-LAST:event_txtAmountKeyTyped

    private void txtAmountKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAmountKeyPressed
   
    }//GEN-LAST:event_txtAmountKeyPressed

    private void txtAmountKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAmountKeyReleased
            
           try
           {
            lblamount=Integer.parseInt(txtAmount.getText());
            amount=youramount-lblamount;
            if(amount<=youramount && amount>=0)
            {
              lblBalance.setText(Double.toString(amount));
              lblError.setVisible(false);
            }
            else
            {
                lblError.setText("Insufficient Balance");
                lblError.setVisible(true);
               lblBalance.setText(Double.toString(youramount)); 
            }
          
           }
           catch(Exception e)
           {
               lblBalance.setText(Double.toString(youramount));
               lblError.setVisible(false);
           }
          
          
    }//GEN-LAST:event_txtAmountKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnWithdraw;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JLabel lblError;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblSearch;
    private javax.swing.JLabel lblSearch1;
    private javax.swing.JTextField txtAmount;
    private javax.swing.JTextField txtCMS;
    private javax.swing.JPasswordField txtPassword;
    // End of variables declaration//GEN-END:variables
   private String senderID;
   private JLabel lblBalance = new JLabel();
   private int lblamount;
   private double youramount;
   double amount;
   boolean sent=false;
  
}
